#!/bin/bash
#############################################################
# Name:        Supportconfig Plugin for SUSE SAP HANA
# Description: Gathers important troubleshooting information
#              about a SUSE SAP HANA Configurations
# License:     GPLv2
# Author:      Jason Record <jason.record@suse.com> Rich Brunt <rich.brunt@suse.com>
# Modified:    2018 Nov
#############################################################

SVER='1.0.2'
RCFILE="/usr/lib/supportconfig/resources/scplugin.rc"
TITLE="SUSE SAP"
INSTANCES=()

[ -s $RCFILE ] && . $RCFILE || { echo "ERROR: Initializing resource file: $RCFILE"; exit 1; }

validate_rpm_if_installed() {
    THISRPM=$1
    echo "#==[ Validating RPM ]=================================#"
    if rpm -q $THISRPM >/dev/null 2>&1; then
        echo "# rpm -V $THISRPM"

        if rpm -V $THISRPM; then
            echo "Status: Passed"
        else
            echo "Status: WARNING"
        fi
    else
        echo "package $THISRPM is not installed"
        echo "Status: Skipped"
    fi
    echo
}
## Docs  ##
section_header "Referencee Documentation"
echo -e "Current Documentation:
\thttps://www.suse.com/documentation/sles-for-sap-15/
Tuning: 
\thttps://www.suse.com/documentation/sles-for-sap-12/singlehtml/book_s4s/book_s4s.html#sec.saptune 
Best Practice Guides: 
\tSAP HANA SR Performance Optimized: SLES 12sp1+:\t https://www.suse.com/media/white-paper/suse_linux_enterprise_server_for_sap_applications_12_sp1.pdf 
\tSAP HANA SR Performance Optimized: SLES 11sp4 :\t https://www.suse.com/media/guide/sap_hana_sr_performance_optimized_scenario_11_sp4.pdf 
\tSAP HANA SR Cost Optimized: SLES 12sp1+ :\thttps://www.suse.com/media/white-paper/sap_hana_sr_cost_optimized_scenario_12_sp1.pdf  
\tSAP NetWeaver High Availability Cluster 7.40 Setup Guide:\t https://www.suse.com/documentation/suse-best-practices/pdfdoc/SAP_HA740_SetupGuide_color_en.pdf 
"
## SAP BASIC Tuning ##
section_header "SAP Tuning information"

RELEASE=$(cat /etc/os-release | grep VERSION=)
if [ $RELEASE == 'VERSION="11.4"' ]; then
   echo -e  "OS Release: $RELEASE \n"
   plugin_command " chkconfig -l boot.sapconf "
   plugin_command "cat /etc/sysconfig/sapconf | grep -v \^#"

else 
#if [ $RELEASE == VERSION="12.2" ]; then
echo -e  "OS Release: $RELEASE \n"
plugin_command "systemctl status sapconf"
plugin_command "systemctl status tuned.service"
plugin_command "tuned-adm list | grep Current "
plugin_command "saptune solution list "
plugin_command "saptune note list "
fi 

#############################################################
section_header "Supportconfig Plugin for $TITLE, v${SVER}"
RPMLIST="
SAPHanaSR
sapconf
tuned
saptune
"

for THISRPM in $RPMLIST; do
    validate_rpm_if_installed $THISRPM
done

## SAP Host Agent ##
plugin_command "/usr/sap/hostctrl/exe/saphostexec -version"
plugin_command "/usr/sap/hostctrl/exe/saphostexec -status"
## SAP Exit Code Index
SAPCONTROLEXIT="sapcontrol return codes:\n 
  0  Last webmethod call successful \n 
  1  Last webmethod call failed, invalid parameter \n 
  2  StartWait, StopWait, WaitforStarted, WaitforStopped, RestartServiceWait timed out \n 
  3  GetProcessList succeeded, all processes running correctly \n 
  4  GetProcessList succeeded, all processes stopped \n"
SAPHDB1="lanscapeHostConfiguration.py return codes: \n 
  0  Fatal \n 
  1  Error \n
  2  Warning \n 
  3  Info \n 
  4  OK \n 
  5  Ignore \n "
SAPHDB2="systemReplicationStatus.py return codes:\n 
  10  NoHSR \n
  11  Error \n 
  12  Unknown ( Normal rc for Secondaray/slave node )\n 
  13  Initializing \n 
  14  Syncing \n 
  15  Active ( Desired state for Primary/master node ) \n"

# Get SAP Instances using saphostctrl function.  Relies on sap interface to be working. 
SAP_CONFIG="sap_config.txt"
/usr/sap/hostctrl/exe/saphostctrl -function ListInstances | awk '{print $4,$6}' &> $SAP_CONFIG

while read LINE
do
        SID=''
        SIDADM=''
        SID=${LINE%\ *}
        SIDADM="$(tr '[:upper:]' '[:lower:]' <<< $SID)adm"
        INST=''
        INST_NAME=''
        INST=${LINE#*\ *}
        INST_NAME="SID=$SID:InstanceNumber=$INST"
        INSTANCES+=("${INST_NAME} ${SIDADM} ${SID} ${INST}")
done < $SAP_CONFIG
rm -r $SAP_CONFIG


#$section_header "$TITLE Config Files"

#pconf_files \
    #/etc/salt/minion.d/_schedule.conf

section_header "$TITLE Troubleshooting Commands"
plugin_command "SAPHanaSR-showAttr"
echo "RETURN CODE: $?"; echo

plugin_command "/usr/sap/hostctrl/exe/saphostctrl -function ListInstances"

# Run through each instance detected and display information about it
INST_CNT=1
LABEL=0
ADM=1
SID=2
NUM=3
for INSTANCE in "${INSTANCES[@]}"
do
	read -r -a ELEMENT <<< $INSTANCE
	section_header "$TITLE Instance $INST_CNT of ${#INSTANCES[@]}: ${ELEMENT[${LABEL}]}"
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDB version'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'hdbnsutil -sr_state'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'sapcontrol -nr ${ELEMENT[${NUM}]} -function GetProcessList'"
	echo "RETURN CODE: $?"; echo -e $SAPCONTROLEXIT; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh landscapeHostConfiguration.py --sapcontrol=1'"
	echo "RETURN CODE: $?"; echo -e $SAPHDB1; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh systemReplicationStatus.py'"
	echo "RETURN CODE: $?"; echo -e $SAPHDB2; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh systemOverview.py'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDB info'"
	echo "RETURN CODE: $?"; echo
	INSTANCE_HOME=$(su - ${ELEMENT[${ADM}]} -c 'pwd' 2>/dev/null)
	BASE=$(dirname $INSTANCE_HOME)
	INSTANCE_CONFIG_DIR="${BASE}/SYS/global/hdb/custom/config"
	INSTANCE_PROFILE_DIR="${BASE}/SYS/profile"
	if [[ -d $INSTANCE_CONFIG_DIR ]]; then
		pconf_files ${INSTANCE_CONFIG_DIR}/global.ini ${INSTANCE_CONFIG_DIR}/nameserver.ini
	fi
	if [[ -d $INSTANCE_PROFILE_DIR ]]; then
		pconf_files ${INSTANCE_PROFILE_DIR}/${ELEMENT[${SID}]}_*
	fi
	 INST_CNT=$[ INST_CNT + 1 ]
done

section_header "$TITLE Log Files"
plugin_command "egrep -i 'saphana' /var/log/messages | tail -1000"
section_header "SAP Log Files"
plugin_command "egrep -i 'SAPDatabase|SAPInstance|SAPStartsrv|sapcontrol|saphostctrl' /var/log/messages | tail -1000"

