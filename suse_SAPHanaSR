#!/bin/bash
#############################################################
# Name:        Supportconfig Plugin for SUSE SAP HANA
# Description: Gathers important troubleshooting information
#              about a SUSE SAP HANA Configurations
# License:     GPLv2
# Author:      Jason Record <jason.record@suse.com>
# Modified:    2018 Mar 14
#############################################################

SVER='1.0.2'
RCFILE="/usr/lib/supportconfig/resources/scplugin.rc"
TITLE="SUSE SAP HANA"
INSTANCES=()

[ -s $RCFILE ] && . $RCFILE || { echo "ERROR: Initializing resource file: $RCFILE"; exit 1; }

validate_rpm_if_installed() {
    THISRPM=$1
    echo "#==[ Validating RPM ]=================================#"
    if rpm -q $THISRPM >/dev/null 2>&1; then
        echo "# rpm -V $THISRPM"

        if rpm -V $THISRPM; then
            echo "Status: Passed"
        else
            echo "Status: WARNING"
        fi
    else
        echo "package $THISRPM is not installed"
        echo "Status: Skipped"
    fi
    echo
}

## SAP BASIC Tuning ##
## if SLES12  chkconfig -l tuned
## if SLES12  systemctl status tuned.service
RELEASE=$(cat /etc/os-release | grep VERSION=)
if [ $RELEASE == 'VERSION="11.4"' ]; then
   echo "OS Release: $RELEASE"
   plugin_command " chkconfig -l boot.sapconf "
   plugin_command "cat /etc/sysconfig/sapconf | grep -v \^#"

else 
#if [ $RELEASE == VERSION="12.2" ]; then
echo "OS Release: $RELEASE"
plugin_command "systemctl status sapconf"
plugin_command "systemctl status tuned.service"
plugin_command "tuned-adm list | grep Current "
plugin_command "saptune solution list "
plugin_command "saptune note list "
fi 

## SAP Host Agent ##
plugin_command "/usr/sap/hostctrl/exe/saphostexec -version"
plugin_command "/usr/sap/hostctrl/exe/saphostexec -status"

CLUSTER_CONFIG="cluster_config.txt"
RE_SAPHANA='ocf:suse:SAPHanaTopology'
# Get SAP HANA Instances
crm configure show &> $CLUSTER_CONFIG
while read LINE
do
	if [[ $LINE =~ $RE_SAPHANA ]]; then
		read -r -a PARAMS <<< $LINE
		SID=''
		INST=''
		SIDADM=''
		INST_NAME=''
		for VALUE in "${PARAMS[@]}"
		do
			TMPSID=${VALUE//SID=/}
			TMPINST=${VALUE//InstanceNumber=/}
			if (( ${#TMPSID} != ${#VALUE} )); then
				SID=$TMPSID
			elif (( ${#TMPINST} != ${#VALUE} )); then
				INST=$TMPINST
			fi
		done
		SIDADM="$(tr '[:upper:]' '[:lower:]' <<< $SID)adm"
		INST_NAME="SID=$SID:InstanceNumber=$INST"
		INSTANCES+=("${INST_NAME} ${SIDADM} ${SID} ${INST}")
	fi
done < $CLUSTER_CONFIG
rm -f $CLUSTER_CONFIG

#############################################################
section_header "Supportconfig Plugin for $TITLE, v${SVER}"
RPMLIST="
SAPHanaSR
sapconf
tuned
saptune
"

for THISRPM in $RPMLIST; do
    validate_rpm_if_installed $THISRPM
done

#$section_header "$TITLE Config Files"

#pconf_files \
    #/etc/salt/minion.d/_schedule.conf

section_header "$TITLE Troubleshooting Commands"
plugin_command "SAPHanaSR-showAttr"
echo "RETURN CODE: $?"; echo

INST_CNT=1
LABEL=0
ADM=1
SID=2
NUM=3
for INSTANCE in "${INSTANCES[@]}"
do
	read -r -a ELEMENT <<< $INSTANCE
	section_header "$TITLE Instance $INST_CNT of ${#INSTANCES[@]}: ${ELEMENT[${LABEL}]}"
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDB version'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'hdbnsutil -sr_state'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'sapcontrol -nr ${ELEMENT[${NUM}]} -function GetProcessList'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh landscapeHostConfiguration.py --sapcontrol=1'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh systemReplicationStatus.py'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDBSettings.sh systemOverview.py'"
	echo "RETURN CODE: $?"; echo
	plugin_command "su - ${ELEMENT[${ADM}]} -c 'HDB info'"
	echo "RETURN CODE: $?"; echo
	INSTANCE_HOME=$(su - ${ELEMENT[${ADM}]} -c 'pwd' 2>/dev/null)
	BASE=$(dirname $INSTANCE_HOME)
	INSTANCE_CONFIG_DIR="${BASE}/SYS/global/hdb/custom/config"
	INSTANCE_PROFILE_DIR="${BASE}/SYS/profile"
	if [[ -d $INSTANCE_CONFIG_DIR ]]; then
		pconf_files ${INSTANCE_CONFIG_DIR}/global.ini ${INSTANCE_CONFIG_DIR}/nameserver.ini
	fi
	if [[ -d $INSTANCE_PROFILE_DIR ]]; then
		pconf_files ${INSTANCE_PROFILE_DIR}/${ELEMENT[${SID}]}_*
	fi
done

section_header "$TITLE Log Files"
plugin_command "egrep -i 'saphana' /var/log/messages | tail -1000"

